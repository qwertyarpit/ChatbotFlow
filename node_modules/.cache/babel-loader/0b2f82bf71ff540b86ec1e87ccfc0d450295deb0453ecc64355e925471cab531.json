{"ast":null,"code":"var _jsxFileName = \"D:\\\\XXXX\\\\src\\\\components\\\\ImageNode.js\";\nimport React from \"react\";\nimport { Handle, Position } from \"reactflow\";\n\n/**\r\n * ImageNode component represents an image message node in the chatbot flow\r\n * Features:\r\n * - Source handle (right side) - can only have one outgoing edge\r\n * - Target handle (left side) - can have multiple incoming edges\r\n * - Editable image URL and caption\r\n * - Instagram-style design\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageNode = ({\n  data,\n  isConnectable\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-node-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-node-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-node-icon\",\n          children: \"\\uD83D\\uDCF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Send Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instagram-icon\",\n        children: \"\\uD83D\\uDCF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-node-body\",\n      children: [data.imageUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.imageUrl,\n          alt: \"Preview\",\n          className: \"preview-image\",\n          onError: e => {\n            e.target.style.display = \"none\";\n            e.target.nextSibling.style.display = \"block\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-placeholder\",\n          style: {\n            display: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"placeholder-icon\",\n            children: \"\\uD83D\\uDDBC\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"placeholder-text\",\n            children: \"Image Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placeholder-icon\",\n          children: \"\\uD83D\\uDDBC\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"placeholder-text\",\n          children: \"No image selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), data.caption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-caption\",\n        children: data.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      id: \"target\",\n      isConnectable: isConnectable,\n      className: \"handle target-handle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      id: \"source\",\n      isConnectable: isConnectable,\n      className: \"handle source-handle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageNode;\nexport default ImageNode;\nvar _c;\n$RefreshReg$(_c, \"ImageNode\");","map":{"version":3,"names":["React","Handle","Position","jsxDEV","_jsxDEV","ImageNode","data","isConnectable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","src","alt","onError","e","target","style","display","nextSibling","caption","type","position","Left","id","Right","_c","$RefreshReg$"],"sources":["D:/XXXX/src/components/ImageNode.js"],"sourcesContent":["import React from \"react\";\r\nimport { Handle, Position } from \"reactflow\";\r\n\r\n/**\r\n * ImageNode component represents an image message node in the chatbot flow\r\n * Features:\r\n * - Source handle (right side) - can only have one outgoing edge\r\n * - Target handle (left side) - can have multiple incoming edges\r\n * - Editable image URL and caption\r\n * - Instagram-style design\r\n */\r\nconst ImageNode = ({ data, isConnectable }) => {\r\n  return (\r\n    <div className=\"image-node\">\r\n      {/* Node header with icon and title */}\r\n      <div className=\"image-node-header\">\r\n        <div className=\"image-node-title\">\r\n          <span className=\"image-node-icon\">üì∑</span>\r\n          <span>Send Image</span>\r\n        </div>\r\n        <div className=\"instagram-icon\">üì∏</div>\r\n      </div>\r\n\r\n      {/* Node body with image preview and caption */}\r\n      <div className=\"image-node-body\">\r\n        {data.imageUrl ? (\r\n          <div className=\"image-preview\">\r\n            <img\r\n              src={data.imageUrl}\r\n              alt=\"Preview\"\r\n              className=\"preview-image\"\r\n              onError={(e) => {\r\n                e.target.style.display = \"none\";\r\n                e.target.nextSibling.style.display = \"block\";\r\n              }}\r\n            />\r\n            <div className=\"image-placeholder\" style={{ display: \"none\" }}>\r\n              <span className=\"placeholder-icon\">üñºÔ∏è</span>\r\n              <span className=\"placeholder-text\">Image Preview</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"image-placeholder\">\r\n            <span className=\"placeholder-icon\">üñºÔ∏è</span>\r\n            <span className=\"placeholder-text\">No image selected</span>\r\n          </div>\r\n        )}\r\n\r\n        {data.caption && <div className=\"image-caption\">{data.caption}</div>}\r\n      </div>\r\n\r\n      {/* Target handle - can accept multiple incoming connections */}\r\n      <Handle\r\n        type=\"target\"\r\n        position={Position.Left}\r\n        id=\"target\"\r\n        isConnectable={isConnectable}\r\n        className=\"handle target-handle\"\r\n      />\r\n\r\n      {/* Source handle - can only have one outgoing connection */}\r\n      <Handle\r\n        type=\"source\"\r\n        position={Position.Right}\r\n        id=\"source\"\r\n        isConnectable={isConnectable}\r\n        className=\"handle source-handle\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageNode;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,WAAW;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAC7C,oBACEH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAEzBL,OAAA;MAAKI,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCL,OAAA;QAAKI,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BL,OAAA;UAAMI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3CT,OAAA;UAAAK,QAAA,EAAM;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACNT,OAAA;QAAKI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAGNT,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BH,IAAI,CAACQ,QAAQ,gBACZV,OAAA;QAAKI,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BL,OAAA;UACEW,GAAG,EAAET,IAAI,CAACQ,QAAS;UACnBE,GAAG,EAAC,SAAS;UACbR,SAAS,EAAC,eAAe;UACzBS,OAAO,EAAGC,CAAC,IAAK;YACdA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;YAC/BH,CAAC,CAACC,MAAM,CAACG,WAAW,CAACF,KAAK,CAACC,OAAO,GAAG,OAAO;UAC9C;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACFT,OAAA;UAAKI,SAAS,EAAC,mBAAmB;UAACY,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO,CAAE;UAAAZ,QAAA,gBAC5DL,OAAA;YAAMI,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7CT,OAAA;YAAMI,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENT,OAAA;QAAKI,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCL,OAAA;UAAMI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC7CT,OAAA;UAAMI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACN,EAEAP,IAAI,CAACiB,OAAO,iBAAInB,OAAA;QAAKI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEH,IAAI,CAACiB;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eAGNT,OAAA,CAACH,MAAM;MACLuB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAEvB,QAAQ,CAACwB,IAAK;MACxBC,EAAE,EAAC,QAAQ;MACXpB,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAGFT,OAAA,CAACH,MAAM;MACLuB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAEvB,QAAQ,CAAC0B,KAAM;MACzBD,EAAE,EAAC,QAAQ;MACXpB,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACgB,EAAA,GA3DIxB,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}